{
	"id": "a399e163f8019d939f6bf5ea6c1130f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"sc/basics/modifiers.sol": {
				"content": "pragma solidity ^0.5.0;\n\ncontract Owner {\n   address  owner;\n   event pocaPlata();\n   constructor() public {\n      owner = msg.sender;\n   }\n   modifier onlyOwner {\n      require(msg.sender == owner);\n      _;\n   }\n   modifier costs(uint price) {\n      if (msg.value >= price) {\n         _;\n      }\n      else\n      {\n         emit pocaPlata();\n      }\n   }\n}\ncontract Register is Owner {\n   mapping (address => bool) registeredAddresses;\n   uint price;\n   constructor(uint initialPrice) public { price = initialPrice; }\n   \n   modifier onlyRegistered {\n      require(registeredAddresses[msg.sender] , \" Solo direcciones registradas. \" );\n      _;\n   }\n   function register() public payable costs(price) {\n      registeredAddresses[msg.sender] = true;\n   }\n   function changePrice(uint _price) public onlyOwner {\n      price = _price;\n   }\n   function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {\n      return registeredAddresses[midireccion];\n   }\n  function isRegistered2() public onlyRegistered view returns(bool) {\n      return registeredAddresses[msg.sender];\n   }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sc/basics/modifiers.sol": {
				"Owner": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "pocaPlata",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"sc/basics/modifiers.sol\":25:358  contract Owner {... */\n  mstore(0x40, 0x80)\n    /* \"sc/basics/modifiers.sol\":86:139  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"sc/basics/modifiers.sol\":86:139  constructor() public {... */\n  pop\n    /* \"sc/basics/modifiers.sol\":123:133  msg.sender */\n  caller\n    /* \"sc/basics/modifiers.sol\":115:120  owner */\n  0x00\n  dup1\n    /* \"sc/basics/modifiers.sol\":115:133  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sc/basics/modifiers.sol\":25:358  contract Owner {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sc/basics/modifiers.sol\":25:358  contract Owner {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158206e269f04bd8f9458fcfd092528e9cacef83445d58cd68379734e6e90e2b2c0ef64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603e80605d6000396000f3fe6080604052600080fdfea265627a7a723158206e269f04bd8f9458fcfd092528e9cacef83445d58cd68379734e6e90e2b2c0ef64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3E DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x269F04BD8F9458FCFD092528E9CACE 0xF8 CALLVALUE GASLIMIT 0xD5 DUP13 0xD6 DUP4 PUSH26 0x734E6E90E2B2C0EF64736F6C6343000511003200000000000000 ",
							"sourceMap": "25:333:0:-;;;86:53;8:9:-1;5:2;;;30:1;27;20:12;5:2;86:53:0;123:10;115:5;;:18;;;;;;;;;;;;;;;;;;25:333;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723158206e269f04bd8f9458fcfd092528e9cacef83445d58cd68379734e6e90e2b2c0ef64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH15 0x269F04BD8F9458FCFD092528E9CACE 0xF8 CALLVALUE GASLIMIT 0xD5 DUP13 0xD6 DUP4 PUSH26 0x734E6E90E2B2C0EF64736F6C6343000511003200000000000000 ",
							"sourceMap": "25:333:0:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "20932",
								"totalCost": "33332"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "MSTORE"
								},
								{
									"begin": 86,
									"end": 139,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 86,
									"end": 139,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 133,
									"name": "CALLER"
								},
								{
									"begin": 115,
									"end": 120,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 115,
									"end": 120,
									"name": "DUP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "EXP"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SLOAD"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "NOT"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP4"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "OR"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SSTORE"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 358,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206e269f04bd8f9458fcfd092528e9cacef83445d58cd68379734e6e90e2b2c0ef64736f6c63430005110032",
									".code": [
										{
											"begin": 25,
											"end": 358,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 358,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 358,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"pocaPlata\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"sc/basics/modifiers.sol\":\"Owner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sc/basics/modifiers.sol\":{\"keccak256\":\"0x715d2846c2b3a06534667b20aee3993c88d6db00825ca0848c8ca4300c1fc926\",\"urls\":[\"bzz-raw://8e28d1546447056283fe01d8e8890068bd101e6407a0e9f84b8f6103a04d625c\",\"dweb:/ipfs/QmUtHojjPWLPnw1ex9uhBBc6cqtNDeGqZNg4ix7iw2MXs7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "sc/basics/modifiers.sol:Owner",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Register": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialPrice",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "pocaPlata",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								}
							],
							"name": "changePrice",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "midireccion",
									"type": "address"
								}
							],
							"name": "isRegistered1",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isRegistered2",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "register",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"sc/basics/modifiers.sol\":359:1104  contract Register is Owner {... */\n  mstore(0x40, 0x80)\n    /* \"sc/basics/modifiers.sol\":456:519  constructor(uint initialPrice) public { price = initialPrice; } */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"sc/basics/modifiers.sol\":456:519  constructor(uint initialPrice) public { price = initialPrice; } */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"sc/basics/modifiers.sol\":456:519  constructor(uint initialPrice) public { price = initialPrice; } */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"sc/basics/modifiers.sol\":123:133  msg.sender */\n  caller\n    /* \"sc/basics/modifiers.sol\":115:120  owner */\n  0x00\n  dup1\n    /* \"sc/basics/modifiers.sol\":115:133  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sc/basics/modifiers.sol\":504:516  initialPrice */\n  dup1\n    /* \"sc/basics/modifiers.sol\":496:501  price */\n  0x02\n    /* \"sc/basics/modifiers.sol\":496:516  price = initialPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sc/basics/modifiers.sol\":456:519  constructor(uint initialPrice) public { price = initialPrice; } */\n  pop\n    /* \"sc/basics/modifiers.sol\":359:1104  contract Register is Owner {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sc/basics/modifiers.sol\":359:1104  contract Register is Owner {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x039b9886\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1aa3a008\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa2b40d19\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xea7b8b58\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"sc/basics/modifiers.sol\":983:1101  function isRegistered2() public onlyRegistered view returns(bool) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"sc/basics/modifiers.sol\":983:1101  function isRegistered2() public onlyRegistered view returns(bool) {... */\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sc/basics/modifiers.sol\":655:755  function register() public payable costs(price) {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"sc/basics/modifiers.sol\":759:838  function changePrice(uint _price) public onlyOwner {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"sc/basics/modifiers.sol\":759:838  function changePrice(uint _price) public onlyOwner {... */\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"sc/basics/modifiers.sol\":759:838  function changePrice(uint _price) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"sc/basics/modifiers.sol\":842:980  function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"sc/basics/modifiers.sol\":842:980  function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {... */\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_17:\n        /* \"sc/basics/modifiers.sol\":842:980  function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sc/basics/modifiers.sol\":983:1101  function isRegistered2() public onlyRegistered view returns(bool) {... */\n    tag_8:\n        /* \"sc/basics/modifiers.sol\":1043:1047  bool */\n      0x00\n        /* \"sc/basics/modifiers.sol\":567:586  registeredAddresses */\n      0x01\n        /* \"sc/basics/modifiers.sol\":567:598  registeredAddresses[msg.sender] */\n      0x00\n        /* \"sc/basics/modifiers.sol\":587:597  msg.sender */\n      caller\n        /* \"sc/basics/modifiers.sol\":567:598  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sc/basics/modifiers.sol\":559:636  require(registeredAddresses[msg.sender] , \" Solo direcciones registradas. \" ) */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20536f6c6f20646972656363696f6e65732072656769737472616461732e2000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"sc/basics/modifiers.sol\":1064:1083  registeredAddresses */\n      0x01\n        /* \"sc/basics/modifiers.sol\":1064:1095  registeredAddresses[msg.sender] */\n      0x00\n        /* \"sc/basics/modifiers.sol\":1084:1094  msg.sender */\n      caller\n        /* \"sc/basics/modifiers.sol\":1064:1095  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sc/basics/modifiers.sol\":1057:1095  return registeredAddresses[msg.sender] */\n      swap1\n      pop\n        /* \"sc/basics/modifiers.sol\":983:1101  function isRegistered2() public onlyRegistered view returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"sc/basics/modifiers.sol\":655:755  function register() public payable costs(price) {... */\n    tag_10:\n        /* \"sc/basics/modifiers.sol\":696:701  price */\n      sload(0x02)\n        /* \"sc/basics/modifiers.sol\":269:274  price */\n      dup1\n        /* \"sc/basics/modifiers.sol\":256:265  msg.value */\n      callvalue\n        /* \"sc/basics/modifiers.sol\":256:274  msg.value >= price */\n      lt\n        /* \"sc/basics/modifiers.sol\":252:351  if (msg.value >= price) {... */\n      tag_23\n      jumpi\n        /* \"sc/basics/modifiers.sol\":745:749  true */\n      0x01\n        /* \"sc/basics/modifiers.sol\":711:730  registeredAddresses */\n      dup1\n        /* \"sc/basics/modifiers.sol\":711:742  registeredAddresses[msg.sender] */\n      0x00\n        /* \"sc/basics/modifiers.sol\":731:741  msg.sender */\n      caller\n        /* \"sc/basics/modifiers.sol\":711:742  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sc/basics/modifiers.sol\":711:749  registeredAddresses[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sc/basics/modifiers.sol\":252:351  if (msg.value >= price) {... */\n      jump(tag_25)\n    tag_23:\n        /* \"sc/basics/modifiers.sol\":331:342  pocaPlata() */\n      0x218278eec928b05e52b3ab66cc9ff526cca14c230156d091a9c1a3e33143dda7\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sc/basics/modifiers.sol\":252:351  if (msg.value >= price) {... */\n    tag_25:\n        /* \"sc/basics/modifiers.sol\":655:755  function register() public payable costs(price) {... */\n      pop\n      jump\t// out\n        /* \"sc/basics/modifiers.sol\":759:838  function changePrice(uint _price) public onlyOwner {... */\n    tag_14:\n        /* \"sc/basics/modifiers.sol\":192:197  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sc/basics/modifiers.sol\":178:197  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sc/basics/modifiers.sol\":178:188  msg.sender */\n      caller\n        /* \"sc/basics/modifiers.sol\":178:197  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"sc/basics/modifiers.sol\":170:198  require(msg.sender == owner) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"sc/basics/modifiers.sol\":826:832  _price */\n      dup1\n        /* \"sc/basics/modifiers.sol\":818:823  price */\n      0x02\n        /* \"sc/basics/modifiers.sol\":818:832  price = _price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sc/basics/modifiers.sol\":759:838  function changePrice(uint _price) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"sc/basics/modifiers.sol\":842:980  function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {... */\n    tag_18:\n        /* \"sc/basics/modifiers.sol\":921:925  bool */\n      0x00\n        /* \"sc/basics/modifiers.sol\":567:586  registeredAddresses */\n      0x01\n        /* \"sc/basics/modifiers.sol\":567:598  registeredAddresses[msg.sender] */\n      0x00\n        /* \"sc/basics/modifiers.sol\":587:597  msg.sender */\n      caller\n        /* \"sc/basics/modifiers.sol\":567:598  registeredAddresses[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sc/basics/modifiers.sol\":559:636  require(registeredAddresses[msg.sender] , \" Solo direcciones registradas. \" ) */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20536f6c6f20646972656363696f6e65732072656769737472616461732e2000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"sc/basics/modifiers.sol\":942:961  registeredAddresses */\n      0x01\n        /* \"sc/basics/modifiers.sol\":942:974  registeredAddresses[midireccion] */\n      0x00\n        /* \"sc/basics/modifiers.sol\":962:973  midireccion */\n      dup4\n        /* \"sc/basics/modifiers.sol\":942:974  registeredAddresses[midireccion] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sc/basics/modifiers.sol\":935:974  return registeredAddresses[midireccion] */\n      swap1\n      pop\n        /* \"sc/basics/modifiers.sol\":842:980  function isRegistered1(address midireccion) public onlyRegistered view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820725096252e454ccc8f5dbfea59b45a4cc298f0d60f43300af9380297846a4d3064736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105123803806105128339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550506104778061009b6000396000f3fe60806040526004361061003f5760003560e01c8063039b9886146100445780631aa3a00814610073578063a2b40d191461007d578063ea7b8b58146100b8575b600080fd5b34801561005057600080fd5b50610059610121565b604051808215151515815260200191505060405180910390f35b61007b610234565b005b34801561008957600080fd5b506100b6600480360360208110156100a057600080fd5b81019080803590602001909291905050506102ca565b005b3480156100c457600080fd5b50610107600480360360208110156100db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032d565b604051808215151515815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f20536f6c6f20646972656363696f6e65732072656769737472616461732e200081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60025480341061029a5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506102c7565b7f218278eec928b05e52b3ab66cc9ff526cca14c230156d091a9c1a3e33143dda760405160405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032357600080fd5b8060028190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f20536f6c6f20646972656363696f6e65732072656769737472616461732e200081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820725096252e454ccc8f5dbfea59b45a4cc298f0d60f43300af9380297846a4d3064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x512 CODESIZE SUB DUP1 PUSH2 0x512 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x477 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39B9886 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xEA7B8B58 EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x234 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x20536F6C6F20646972656363696F6E65732072656769737472616461732E2000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT PUSH2 0x29A JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2C7 JUMP JUMPDEST PUSH32 0x218278EEC928B05E52B3AB66CC9FF526CCA14C230156D091A9C1A3E33143DDA7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x20536F6C6F20646972656363696F6E65732072656769737472616461732E2000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH19 0x5096252E454CCC8F5DBFEA59B45A4CC298F0D6 0xF NUMBER ADDRESS EXP 0xF9 CODESIZE MUL SWAP8 DUP5 PUSH11 0x4D3064736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "359:745:0:-;;;456:63;8:9:-1;5:2;;;30:1;27;20:12;5:2;456:63:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;456:63:0;;;;;;;;;;;;;;;;123:10;115:5;;:18;;;;;;;;;;;;;;;;;;504:12;496:5;:20;;;;456:63;359:745;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061003f5760003560e01c8063039b9886146100445780631aa3a00814610073578063a2b40d191461007d578063ea7b8b58146100b8575b600080fd5b34801561005057600080fd5b50610059610121565b604051808215151515815260200191505060405180910390f35b61007b610234565b005b34801561008957600080fd5b506100b6600480360360208110156100a057600080fd5b81019080803590602001909291905050506102ca565b005b3480156100c457600080fd5b50610107600480360360208110156100db57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032d565b604051808215151515815260200191505060405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166101e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f20536f6c6f20646972656363696f6e65732072656769737472616461732e200081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b60025480341061029a5760018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506102c7565b7f218278eec928b05e52b3ab66cc9ff526cca14c230156d091a9c1a3e33143dda760405160405180910390a15b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032357600080fd5b8060028190555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166103ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f20536f6c6f20646972656363696f6e65732072656769737472616461732e200081525060200191505060405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905091905056fea265627a7a72315820725096252e454ccc8f5dbfea59b45a4cc298f0d60f43300af9380297846a4d3064736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39B9886 EQ PUSH2 0x44 JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xA2B40D19 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xEA7B8B58 EQ PUSH2 0xB8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x121 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0x234 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x20536F6C6F20646972656363696F6E65732072656769737472616461732E2000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 CALLVALUE LT PUSH2 0x29A JUMPI PUSH1 0x1 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x2C7 JUMP JUMPDEST PUSH32 0x218278EEC928B05E52B3AB66CC9FF526CCA14C230156D091A9C1A3E33143DDA7 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x20536F6C6F20646972656363696F6E65732072656769737472616461732E2000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH19 0x5096252E454CCC8F5DBFEA59B45A4CC298F0D6 0xF NUMBER ADDRESS EXP 0xF9 CODESIZE MUL SWAP8 DUP5 PUSH11 0x4D3064736F6C6343000511 STOP ORIGIN ",
							"sourceMap": "359:745:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;983:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;983:118:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;655:100;;;:::i;:::-;;759:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;759:79:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;759:79:0;;;;;;;;;;;;;;;;;:::i;:::-;;842:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:138:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;842:138:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;983:118;1043:4;567:19;:31;587:10;567:31;;;;;;;;;;;;;;;;;;;;;;;;;559:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1064:19;:31;1084:10;1064:31;;;;;;;;;;;;;;;;;;;;;;;;;1057:38;;983:118;:::o;655:100::-;696:5;;269;256:9;:18;252:99;;745:4;711:19;:31;731:10;711:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;252:99;;;331:11;;;;;;;;;;252:99;655:100;:::o;759:79::-;192:5;;;;;;;;;;;178:19;;:10;:19;;;170:28;;;;;;826:6;818:5;:14;;;;759:79;:::o;842:138::-;921:4;567:19;:31;587:10;567:31;;;;;;;;;;;;;;;;;;;;;;;;;559:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:19;:32;962:11;942:32;;;;;;;;;;;;;;;;;;;;;;;;;935:39;;842:138;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "228600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"changePrice(uint256)": "21134",
								"isRegistered1(address)": "2230",
								"isRegistered2()": "2070",
								"register()": "21914"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "MSTORE"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "MLOAD"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "PUSHSIZE"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "CODESIZE"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SUB"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "PUSHSIZE"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP4"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "CODECOPY"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP2"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP2"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP2"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "MLOAD"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "ADD"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP3"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP2"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "SWAP1"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 133,
									"name": "CALLER"
								},
								{
									"begin": 115,
									"end": 120,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 115,
									"end": 120,
									"name": "DUP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "EXP"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SLOAD"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP2"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "NOT"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "DUP4"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "AND"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "MUL"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "OR"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SWAP1"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "SSTORE"
								},
								{
									"begin": 115,
									"end": 133,
									"name": "POP"
								},
								{
									"begin": 504,
									"end": 516,
									"name": "DUP1"
								},
								{
									"begin": 496,
									"end": 501,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 496,
									"end": 516,
									"name": "DUP2"
								},
								{
									"begin": 496,
									"end": 516,
									"name": "SWAP1"
								},
								{
									"begin": 496,
									"end": 516,
									"name": "SSTORE"
								},
								{
									"begin": 496,
									"end": 516,
									"name": "POP"
								},
								{
									"begin": 456,
									"end": 519,
									"name": "POP"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "DUP1"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "CODECOPY"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 359,
									"end": 1104,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820725096252e454ccc8f5dbfea59b45a4cc298f0d60f43300af9380297846a4d3064736f6c63430005110032",
									".code": [
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "MSTORE"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "LT"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "SHR"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "39B9886"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "EQ"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "1AA3A008"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "EQ"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "A2B40D19"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "EQ"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "EA7B8B58"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "EQ"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPI"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "JUMPDEST"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 1104,
											"name": "REVERT"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "MLOAD"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "DUP3"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "ISZERO"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "DUP2"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "MSTORE"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "ADD"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "MLOAD"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "DUP1"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "SWAP2"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "SUB"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "RETURN"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "STOP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "DUP2"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "ADD"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP3"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP2"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "SWAP1"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "STOP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "AND"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP3"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP3"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ISZERO"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "MSTORE"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "ADD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "MLOAD"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "DUP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SUB"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "RETURN"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "JUMPDEST"
										},
										{
											"begin": 1043,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 586,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "KECCAK256"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SLOAD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "EXP"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DIV"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20536F6C6F20646972656363696F6E65732072656769737472616461732E2000"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "REVERT"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "JUMPDEST"
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "CALLER"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "AND"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "AND"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "ADD"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "MSTORE"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "ADD"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "KECCAK256"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "SLOAD"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "EXP"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "DIV"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1064,
											"end": 1095,
											"name": "AND"
										},
										{
											"begin": 1057,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1057,
											"end": 1095,
											"name": "POP"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "SWAP1"
										},
										{
											"begin": 983,
											"end": 1101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "JUMPDEST"
										},
										{
											"begin": 696,
											"end": 701,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 696,
											"end": 701,
											"name": "SLOAD"
										},
										{
											"begin": 269,
											"end": 274,
											"name": "DUP1"
										},
										{
											"begin": 256,
											"end": 265,
											"name": "CALLVALUE"
										},
										{
											"begin": 256,
											"end": 274,
											"name": "LT"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "JUMPI"
										},
										{
											"begin": 745,
											"end": 749,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 711,
											"end": 730,
											"name": "DUP1"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 731,
											"end": 741,
											"name": "CALLER"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "AND"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "AND"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "MSTORE"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "MSTORE"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "ADD"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "KECCAK256"
										},
										{
											"begin": 711,
											"end": 742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "EXP"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "SLOAD"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "DUP2"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "MUL"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "NOT"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "AND"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "DUP4"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "ISZERO"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "ISZERO"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "MUL"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "OR"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "SWAP1"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "SSTORE"
										},
										{
											"begin": 711,
											"end": 749,
											"name": "POP"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "JUMP"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "PUSH",
											"value": "218278EEC928B05E52B3AB66CC9FF526CCA14C230156D091A9C1A3E33143DDA7"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "MLOAD"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "DUP1"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "SWAP2"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "SUB"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "SWAP1"
										},
										{
											"begin": 331,
											"end": 342,
											"name": "LOG1"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 252,
											"end": 351,
											"name": "JUMPDEST"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "POP"
										},
										{
											"begin": 655,
											"end": 755,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "JUMPDEST"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "SLOAD"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "EXP"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DIV"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 178,
											"end": 188,
											"name": "CALLER"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 178,
											"end": 197,
											"name": "EQ"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "JUMPI"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "REVERT"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 170,
											"end": 198,
											"name": "JUMPDEST"
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP1"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 818,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 818,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 818,
											"end": 832,
											"name": "SSTORE"
										},
										{
											"begin": 818,
											"end": 832,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "POP"
										},
										{
											"begin": 759,
											"end": 838,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "JUMPDEST"
										},
										{
											"begin": 921,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 586,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 597,
											"name": "CALLER"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DUP2"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "MSTORE"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "ADD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "KECCAK256"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SLOAD"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "EXP"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DIV"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "AND"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "JUMPI"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP3"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20536F6C6F20646972656363696F6E65732072656769737472616461732E2000"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MSTORE"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "ADD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "POP"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "MLOAD"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "DUP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP2"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SUB"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "SWAP1"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "REVERT"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 559,
											"end": 636,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 961,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 962,
											"end": 973,
											"name": "DUP4"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "DUP2"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "MSTORE"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "ADD"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "KECCAK256"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SLOAD"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "EXP"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "DIV"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 942,
											"end": 974,
											"name": "AND"
										},
										{
											"begin": 935,
											"end": 974,
											"name": "SWAP1"
										},
										{
											"begin": 935,
											"end": 974,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP2"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "SWAP1"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 980,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"changePrice(uint256)": "a2b40d19",
							"isRegistered1(address)": "ea7b8b58",
							"isRegistered2()": "039b9886",
							"register()": "1aa3a008"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"pocaPlata\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"midireccion\",\"type\":\"address\"}],\"name\":\"isRegistered1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRegistered2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"register\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"sc/basics/modifiers.sol\":\"Register\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sc/basics/modifiers.sol\":{\"keccak256\":\"0x715d2846c2b3a06534667b20aee3993c88d6db00825ca0848c8ca4300c1fc926\",\"urls\":[\"bzz-raw://8e28d1546447056283fe01d8e8890068bd101e6407a0e9f84b8f6103a04d625c\",\"dweb:/ipfs/QmUtHojjPWLPnw1ex9uhBBc6cqtNDeGqZNg4ix7iw2MXs7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "sc/basics/modifiers.sol:Register",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 48,
								"contract": "sc/basics/modifiers.sol:Register",
								"label": "registeredAddresses",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 50,
								"contract": "sc/basics/modifiers.sol:Register",
								"label": "price",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"sc/basics/modifiers.sol": {
				"ast": {
					"absolutePath": "sc/basics/modifiers.sol",
					"exportedSymbols": {
						"Owner": [
							42
						],
						"Register": [
							126
						]
					},
					"id": 127,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "Owner",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 42,
									"src": "45:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "45:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 5,
									"name": "pocaPlata",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79:2:0"
									},
									"src": "64:18:0"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "107:32:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 8,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "115:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 9,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "123:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 10,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "123:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "115:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "115:18:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "97:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "107:0:0"
									},
									"scope": 42,
									"src": "86:53:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "162:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 17,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "178:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "178:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "192:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "178:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 16,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															144,
															145
														],
														"referencedDeclaration": 144,
														"src": "170:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "170:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "170:28:0"
											},
											{
												"id": 23,
												"nodeType": "PlaceholderStatement",
												"src": "206:1:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "162:0:0"
									},
									"src": "143:70:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "244:112:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "256:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "256:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 31,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "269:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "256:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 38,
													"nodeType": "Block",
													"src": "315:36:0",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 35,
																	"name": "pocaPlata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "331:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "331:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 37,
															"nodeType": "EmitStatement",
															"src": "326:16:0"
														}
													]
												},
												"id": 39,
												"nodeType": "IfStatement",
												"src": "252:99:0",
												"trueBody": {
													"id": 34,
													"nodeType": "Block",
													"src": "276:21:0",
													"statements": [
														{
															"id": 33,
															"nodeType": "PlaceholderStatement",
															"src": "287:1:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 41,
									"name": "costs",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "231:12:0"
									},
									"src": "217:139:0",
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "25:333:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 43,
										"name": "Owner",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 42,
										"src": "380:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Owner_$42",
											"typeString": "contract Owner"
										}
									},
									"id": 44,
									"nodeType": "InheritanceSpecifier",
									"src": "380:5:0"
								}
							],
							"contractDependencies": [
								42
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126,
								42
							],
							"name": "Register",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 48,
									"name": "registeredAddresses",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "391:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 47,
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "391:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 46,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "411:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 50,
									"name": "price",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "441:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "441:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "494:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 55,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "496:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "504:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "496:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "496:20:0"
											}
										]
									},
									"documentation": null,
									"id": 60,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"name": "initialPrice",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "468:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "467:19:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:0"
									},
									"scope": 126,
									"src": "456:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "551:100:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "registeredAddresses",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 48,
																"src": "567:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 66,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 64,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "587:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "587:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "567:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "20536f6c6f20646972656363696f6e65732072656769737472616461732e20",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "601:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7449616c54c34818eafaa555dc57b68f8fc9320a9e43beed4849a7586b2ce928",
																"typeString": "literal_string \" Solo direcciones registradas. \""
															},
															"value": " Solo direcciones registradas. "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7449616c54c34818eafaa555dc57b68f8fc9320a9e43beed4849a7586b2ce928",
																"typeString": "literal_string \" Solo direcciones registradas. \""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															144,
															145
														],
														"referencedDeclaration": 145,
														"src": "559:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "559:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "559:77:0"
											},
											{
												"id": 70,
												"nodeType": "PlaceholderStatement",
												"src": "644:1:0"
											}
										]
									},
									"documentation": null,
									"id": 72,
									"name": "onlyRegistered",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:0"
									},
									"src": "527:124:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "703:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 78,
															"name": "registeredAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "711:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 81,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "731:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "731:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "711:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "745:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "711:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "711:38:0"
											}
										]
									},
									"documentation": null,
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 75,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "696:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 76,
											"modifierName": {
												"argumentTypes": null,
												"id": 74,
												"name": "costs",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 41,
												"src": "690:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_uint256_$",
													"typeString": "modifier (uint256)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "690:12:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:0"
									},
									"scope": 126,
									"src": "655:100:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "810:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 93,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "818:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "_price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 88,
														"src": "826:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "818:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "818:14:0"
											}
										]
									},
									"documentation": null,
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 91,
											"modifierName": {
												"argumentTypes": null,
												"id": 90,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 25,
												"src": "800:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "800:9:0"
										}
									],
									"name": "changePrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "_price",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "780:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "780:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "779:13:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:0:0"
									},
									"scope": 126,
									"src": "759:79:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "927:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "registeredAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "942:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 109,
													"indexExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "midireccion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "962:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "942:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 106,
												"id": 110,
												"nodeType": "Return",
												"src": "935:39:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 103,
											"modifierName": {
												"argumentTypes": null,
												"id": 102,
												"name": "onlyRegistered",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "893:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "893:14:0"
										}
									],
									"name": "isRegistered1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "midireccion",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "865:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:21:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:6:0"
									},
									"scope": 126,
									"src": "842:138:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1049:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "registeredAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1064:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 122,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1084:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1084:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1064:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 118,
												"id": 123,
												"nodeType": "Return",
												"src": "1057:38:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 115,
											"modifierName": {
												"argumentTypes": null,
												"id": 114,
												"name": "onlyRegistered",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 72,
												"src": "1015:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1015:14:0"
										}
									],
									"name": "isRegistered2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1043:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1042:6:0"
									},
									"scope": 126,
									"src": "983:118:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 127,
							"src": "359:745:0"
						}
					],
					"src": "0:1104:0"
				},
				"id": 0
			}
		}
	}
}